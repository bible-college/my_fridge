"""Add name and restore title to Recipe model

Revision ID: f5dd64721b56
Revises: 4c0693ef2a48
Create Date: 2025-09-27 14:42:55.723004

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f5dd64721b56'
down_revision: Union[str, Sequence[str], None] = '4c0693ef2a48'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('ingredients_name_key'), 'ingredients', type_='unique')
    op.create_index(op.f('ix_ingredients_name'), 'ingredients', ['name'], unique=True)
    op.add_column('recipes', sa.Column('name', sa.String(), nullable=False))
    op.alter_column('recipes', 'instructions',
               existing_type=sa.TEXT(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False)
    op.alter_column('user_ingredients', 'ingredient_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_ingredients', 'ingredient_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('recipes', 'instructions',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('recipes', 'name')
    op.drop_index(op.f('ix_ingredients_name'), table_name='ingredients')
    op.create_unique_constraint(op.f('ingredients_name_key'), 'ingredients', ['name'], postgresql_nulls_not_distinct=False)
    # ### end Alembic commands ###
