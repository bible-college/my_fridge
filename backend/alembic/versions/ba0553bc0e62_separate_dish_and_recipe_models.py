"""Separate Dish and Recipe models

Revision ID: ba0553bc0e62
Revises: 5216aa8b5788
Create Date: 2025-08-27 14:46:00.264988

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ba0553bc0e62'
down_revision: Union[str, Sequence[str], None] = '5216aa8b5788'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_dish_types_id'), table_name='dish_types')
    op.drop_table('dish_types')
    op.add_column('ingredients', sa.Column('category', sa.String(), nullable=True))
    op.add_column('ingredients', sa.Column('storage_type', sa.String(), nullable=True))
    op.drop_constraint(op.f('ingredients_name_key'), 'ingredients', type_='unique')
    op.create_index(op.f('ix_ingredients_name'), 'ingredients', ['name'], unique=True)
    op.add_column('user_ingredients', sa.Column('user_id', sa.Integer(), nullable=False))
    op.alter_column('user_ingredients', 'ingredient_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_foreign_key(None, 'user_ingredients', 'users', ['user_id'], ['id'])
    op.add_column('users', sa.Column('is_admin', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'is_admin')
    op.drop_constraint(None, 'user_ingredients', type_='foreignkey')
    op.alter_column('user_ingredients', 'ingredient_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('user_ingredients', 'user_id')
    op.drop_index(op.f('ix_ingredients_name'), table_name='ingredients')
    op.create_unique_constraint(op.f('ingredients_name_key'), 'ingredients', ['name'], postgresql_nulls_not_distinct=False)
    op.drop_column('ingredients', 'storage_type')
    op.drop_column('ingredients', 'category')
    op.create_table('dish_types',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('dish_types_pkey'))
    )
    op.create_index(op.f('ix_dish_types_id'), 'dish_types', ['id'], unique=False)
    # ### end Alembic commands ###
