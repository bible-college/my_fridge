services:
  api:
    build:
      context: ./backend
    container_name: my_fridge_api
    command: >
      sh -c "uv run alembic upgrade head &&
             uv run uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "${HOST_API_PORT:-8000}:8000"
    volumes:
      - ./backend:/app
      - uv_venv:/app/.venv         # .venv를 네임드 볼륨으로 분리해서 가리지 않게
    env_file:
      - .env
    environment:
      - PYTHONPATH=.               # 필요 없을 수도 있지만 안전빵
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  db:
    image: pgvector/pgvector:pg16
    container_name: my_fridge_db
    env_file:
      - .env
    ports:
      - "${HOST_DB_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-app} -d ${POSTGRES_DB:-fridge_db}"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: my_fridge_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
  uv_venv:
